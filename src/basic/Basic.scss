@import url("https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100&display=swap");

* {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
}
:root {
	--main-bg-color: #4f3ea8;
	--sub-bg-color: #291c6e;
}
ul, li {
    list-style: none;
}

body {
	background-color: var(--main-bg-color);
	font-family: "Noto Sans KR", sans-serif;
}

section {
    width: 100%;
    height: 100vh;
    overflow: hidden;
}
.masterCatImg {
    width: 600px;
    height: auto;
    position: absolute;
    top: 50%;
    left: 0%;
    transform: translateY(-50%);
    opacity: .2;
}
.duelBasicBox {
    width: 80%;
    height: 80%;
    min-height: 680px;
    background-color: black !important;
    z-index: 99;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    border-radius: 20px;
    -webkit-box-shadow: 0px 10px 13px -7px #000000, -8px -26px 7px 17px rgba(0,0,0,0); 
    box-shadow: 0px 10px 13px -7px #000000, -8px -26px 7px 17px rgba(0,0,0,0);
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden;
    opacity: .93;
}
.back {
    position: absolute;
    padding: 10px;
    right: 20px;
    bottom: 12px;
    border: 1px solid white;
    border-radius: 10px;
    cursor: pointer;
}

.duelBasicBox > div {
    position: absolute;
    width: 100%;
    left: 0;
    transition: 1s;
}
.duelBasicBox > div.oneLi {
    left: -100%;
}
.duelBasicBox > div.twoLi {
    left: -200%;
}
.duelBasicBox > div.thrLi {
    left: -300%;
}

.btnUl {
    text-align: center;
}
.btnUl:nth-of-type(2) h1 {
    font-size: 2rem !important;
}
.btnUl li span {
    font-size: 18px !important;
}

@media (max-width: 991px) { 
    .duelBasicBox > div > div h1 {
        font-size: 22px;
    }
    .duelBasicBox > div > div h3 {
        font-size: 20px;
    }
    .duelBasicBox > div > div li span,
    .duelBasicBox > div > div li p {
        font-size: 14px !important;
    }
}
@media (max-width: 767px) {
    .duelBasicBox > div > div h1 {
        font-size: 18px;
    }
    .duelBasicBox > div > div h3 {
        font-size: 16px;
    }
    .duelBasicBox > div > div li span,
    .duelBasicBox > div > div li p {
        font-size: 12px !important;
    }
}
@media (max-width: 625px) {
    .duelBasicBox > div > div h1 {
        font-size: 18px;
    }
    .duelBasicBox > div > div h3 {
        font-size: 16px;
    }
    .duelBasicBox > div > div li span,
    .duelBasicBox > div > div li p {
        font-size: 12px !important;
    }
}
@media (max-width: 510px) {
    .duelBasicBox > div > div h1 {
        font-size: 16px;
    }
    .duelBasicBox > div > div h3 {
        font-size: 14px;
    }
    .duelBasicBox > div > div li span,
    .duelBasicBox > div > div li p {
        font-size: 10px !important;
        padding: 0;
    }
    .duelBasicBox div > ul > li {
        padding: 0 !important;
    }
}

.duelComboBox {
    width: 100%;
    height: 100vh;
    position: relative;
    min-height: 700px;
}

.svgBox {
    width: 100%;
    height: 600px;
}

.duelBasicBox > div > div{
    width: 80%;
    color: white;
    text-align: left;
    margin: 0 auto;
    transition: 1s;
}
.duelBasicBox > div > div:nth-of-type(2) {
    width: 100%;
    height: 100%;
    top: 0;
    left: 100%;
    position: absolute;
}
.duelBasicBox > div > div:nth-of-type(3) {
    width: 100%;
    height: 100%;
    top: 0;
    left: 200%;
    position: absolute;
}
.duelBasicBox > div > div:nth-of-type(4) {
    width: 100%;
    height: 100%;
    top: 0;
    left: 300%;
    position: absolute;
}
.duelBasicBox div h1 {
    margin: 10px;
    color: rgba(255, 255, 255, .7);
    text-align: center !important;
}
.duelBasicBox div h3 {
    font-weight: 400;
    color: rgb(224, 129, 216);
    padding: 10px 0;
}
.duelBasicBox div span {
    font-size: 16px;
    color: rgb(255, 255, 255);
}
.duelBasicBox div p {
    color: rgba(255, 255, 255, 0.5);
}
.duelBasicBox div ul {
    padding-left: 0 !important;
}
.duelBasicBox div > ul > li {
    padding: 10px;
    border-top: 1px solid rgba(0, 0, 0, .3);
}

.duelBasicUl > li:hover {
    background-color: rgba(255, 255, 255, .1);
    transition: .5s;
    cursor: pointer;
}